---
apiVersion: repo.github.upbound.io/v1alpha1
kind: RepositoryFile
metadata:
  name: {{ .Release.Name }}-main-go
spec:
  forProvider:
    content: |
      package main

      import (
              "fmt"
              "net/http"
              "os"

              "github.com/gin-gonic/gin"
      )

      func main() {
              router := gin.New()
              router.GET("/", rootHandler)
              port := os.Getenv("PORT")
              if len(port) == 0 {
                      port = "8080"
              }
              router.Run(fmt.Sprintf(":%s", port))
      }

      func rootHandler(ctx *gin.Context) {
              output := "This is silly. Convert it into something great!"
              ctx.String(http.StatusOK, output)
      }
    file: main.go
    repositorySelector:
      matchLabels:
        owner: {{ .Values.github.organization }}
        repo: {{ .Values.github.repository }}
---
apiVersion: repo.github.upbound.io/v1alpha1
kind: RepositoryFile
metadata:
  name: {{ .Release.Name }}-dockerfile
spec:
  forProvider:
    content: |
      FROM golang:1.20-alpine AS build
      ADD . /src
      WORKDIR /src
      RUN go get -d -v -t
      RUN GOOS=linux GOARCH=amd64 go build -v -o {{ .Values.application.name }}

      FROM alpine:3.17.3
      EXPOSE 8080
      CMD ["{{ .Values.application.name }}"]
      ENV VERSION 1.1.4
      COPY --from=build /src/{{ .Values.application.name }} /usr/local/bin/{{ .Values.application.name }}
      RUN chmod +x /usr/local/bin/{{ .Values.application.name }}
    file: Dockerfile
    repositorySelector:
      matchLabels:
        owner: {{ .Values.github.organization }}
        repo: {{ .Values.github.repository }}
---
apiVersion: repo.github.upbound.io/v1alpha1
kind: RepositoryFile
metadata:
  name: {{ .Release.Name }}-kustomize-production-kustomization
spec:
  forProvider:
    content: |
      apiVersion: kustomize.config.k8s.io/v1beta1
      kind: Kustomization
      resources:
        - ../../base
      patches:
      - path: app-patch.yaml
    file: kustomize/overlays/production/kustomization.yaml
    repositorySelector:
      matchLabels:
        owner: {{ .Values.github.organization }}
        repo: {{ .Values.github.repository }}
---
apiVersion: repo.github.upbound.io/v1alpha1
kind: RepositoryFile
metadata:
  name: {{ .Release.Name }}-kustomize-base-schema
spec:
  forProvider:
    content: |
      ---
      apiVersion: databases.schemahero.io/v1alpha4
      kind: Database
      metadata:
        name: {{ .Values.application.name }}
      spec:
        immediateDeploy: true
        connection:
          postgres:
            host:
              value: postgresql
            user:
              value: postgres
            password:
              valueFrom:
                secretKeyRef:
                  name: postgresql
                  key: postgres-password
            port:
              value: "5432"
            dbname:
              value: {{ .Values.application.name }}
      ---
      apiVersion: schemas.schemahero.io/v1alpha4
      kind: Table
      metadata:
        name: {{ .Values.application.name }}-videos
      spec:
        database: {{ .Values.application.name }}
        name: videos
        schema:
          postgres:
            primaryKey:
            - id
            columns:
            - name: id
              type: text
              constraints:
                notNull: true
            - name: title
              type: text
              constraints:
                notNull: true
    file: kustomize/base/schema.yaml
    repositorySelector:
      matchLabels:
        owner: {{ .Values.github.organization }}
        repo: {{ .Values.github.repository }}
---
apiVersion: repo.github.upbound.io/v1alpha1
kind: RepositoryFile
metadata:
  name: {{ .Release.Name }}-kustomize-base-kustomization
spec:
  forProvider:
    content: |
      apiVersion: kustomize.config.k8s.io/v1beta1
      kind: Kustomization
      resources:
        - app.yaml
        - schema.yaml
    file: kustomize/base/kustomization.yaml
    repositorySelector:
      matchLabels:
        owner: {{ .Values.github.organization }}
        repo: {{ .Values.github.repository }}
---
apiVersion: repo.github.upbound.io/v1alpha1
kind: RepositoryFile
metadata:
  name: {{ .Release.Name }}-kustomize-base-app
spec:
  forProvider:
    content: |
      ---
      apiVersion: devopstoolkitseries.com/v1alpha1
      kind: AppClaim
      metadata:
        annotations:
          gitHubOrg: {{ .Values.github.organization }}
          gitHubRepo: {{ .Values.application.name }}
        name: {{ .Values.application.name }}
      spec:
        id: {{ .Values.application.name }}
        compositionSelector:
          matchLabels:
            type: {{ .Values.hyperscaler }}
            location: local
        parameters:
          namespace: {{ .Release.Namespace }}
          image: {{ .Values.image.repository }}/{{ .Values.application.name }}:latest
          port: 8080
          host: {{ .Values.application.host }}
          db:
            version: "{{ .Values.database.version }}"
            size: {{ .Values.database.size }}
    file: kustomize/base/app.yaml
    repositorySelector:
      matchLabels:
        owner: {{ .Values.github.organization }}
        repo: {{ .Values.github.repository }}
---
apiVersion: repo.github.upbound.io/v1alpha1
kind: RepositoryFile
metadata:
  name: {{ .Release.Name }}-compass.yaml
spec:
  forProvider:
    content: |
      ---
      name: {{ .Values.application.name }}
      slug: {{ .Values.application.name }}
      description: null
      configVersion: 1
      typeId: SERVICE
      ownerId: {{ .Values.application.ownerId }}
      fields:
        tier: 4
        isMonorepoProject: false
      links:
        - name: null
          type: REPOSITORY
          url: 'https://github.com/{{ .Values.github.organization }}/{{ .Values.application.name }}''
      relationships: {}
      labels:
        - 'source:github'
      customFields: null

      # Learn more about formatting compass.yml:
      # https://go.atlassian.com/compass-yml-format
    file: compass.yml
    repositorySelector:
      matchLabels:
        owner: {{ .Values.github.organization }}
        repo: {{ .Values.github.repository }}